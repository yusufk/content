# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install jq
        run: sudo apt-get install -y jq
      - name: Generate index.json
        run: |
          cd published
          files=$(find . -maxdepth 1 -name "*.md" -type f -exec basename {} \; | jq -R . | jq -s .)
          echo $files > index.json
      - name: Generate SEO pages
        run: |
          cd published
          for file in *.md; do
            if [ -f "$file" ]; then
              slug=$(basename "$file" .md)
              title=$(grep '^# ' "$file" | head -1 | sed 's/^# //' || echo "$slug")
              mkdir -p "articles/$slug"
              cat > "articles/$slug/index.html" << EOF
          <!DOCTYPE html>
          <html><head>
          <title>$title</title>
          <meta name="description" content="$(head -10 "$file" | grep -v '^#' | head -3 | tr '\n' ' ')">
          </head><body>
          <pre>$(cat "$file")</pre>
          <script>setTimeout(() => location.href='https://yusuf.kaka.co.za/#!/articles/$slug', 100)</script>
          </body></html>
          EOF
            fi
          done
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: './published'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
